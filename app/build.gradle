plugins {
    id 'com.android.application'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.janesth.taken"
        minSdk 29
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "DBURL", getDbUrl()
        buildConfigField "String", "DBNAME", getDbName()
        buildConfigField "String", "DBUSER", getDbUser()
        buildConfigField "String", "DBPASSWORD", getDbPassword()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.1.7'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
}

def getDbUrl() {
    Properties properties = new Properties()
    properties.load(project.file('src/main/assets/app.properties').newDataInputStream())
    return properties.getProperty("db.url");
}

def getDbName() {
    Properties properties = new Properties()
    properties.load(project.file('src/main/assets/app.properties').newDataInputStream())
    return properties.getProperty("db.name");
}

def getDbUser() {
    Properties properties = new Properties()
    properties.load(project.file('src/main/assets/app.properties').newDataInputStream())
    return properties.getProperty("db.user");
}

def getDbPassword() {
    Properties properties = new Properties()
    properties.load(project.file('src/main/assets/app.properties').newDataInputStream())
    return properties.getProperty("db.password");
}